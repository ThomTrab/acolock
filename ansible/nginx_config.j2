server {
  # if no Host match, close the connection to prevent host spoofing
  listen 80 default_server;
  return 444;
}

upstream acolock_back {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response
  server unix:/run/acolock/socket fail_timeout=0;
}

server {
  listen 80 deferred;
  client_max_body_size 20M;

  server_name
    localhost
    acolock.local
  ;

  keepalive_timeout 5;

  # path for static files
  root /home/pi/front;

  location / {
    # checks for static file, if not found proxy to app
    try_files $uri $uri/index.html @proxy_to_app;
  }

  location @proxy_to_app {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://acolock_back;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root /home/pi/front;
  }
}
