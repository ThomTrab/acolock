server {
  # if no Host match, close the connection to prevent host spoofing
  listen 80 default_server;
  return 444;
}

upstream acolock_back {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response
  server unix:/run/acolock/socket fail_timeout=0;
}

server {
  listen 80 deferred;
  server_name {{ acolock_hostname }};

  location / {
    return 302 https://$host:{{acolock_https_port}}$request_uri;
  }
}

server {
  listen 443 ssl deferred;
  client_max_body_size 20M;

  server_name {{ acolock_hostname }};

  keepalive_timeout 5;

  ssl_certificate /etc/nginx/{{ acolock_hostname }}.cer;
  ssl_certificate_key /etc/nginx/{{ acolock_hostname }}.key;

  # https://cipherli.st/
  ssl_protocols TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_dhparam /etc/nginx/dhparam.pem;
  ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
  ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
  ssl_session_timeout  10m;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off; # Requires nginx >= 1.5.9
  ssl_stapling on; # Requires nginx >= 1.3.7
  ssl_stapling_verify on; # Requires nginx => 1.3.7
  resolver 9.9.9.9 8.8.8.8 valid=300s;
  resolver_timeout 5s;
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
  add_header X-Frame-Options DENY always;
  add_header X-Content-Type-Options nosniff always;
  add_header X-XSS-Protection "1; mode=block" always;

  # path for static files
  root /home/pi/front;

  location / {
    # checks for static file, if not found proxy to app
    try_files $uri $uri/index.html @proxy_to_app;
  }

  location @proxy_to_app {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://acolock_back;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root /home/pi/front;
  }
}
